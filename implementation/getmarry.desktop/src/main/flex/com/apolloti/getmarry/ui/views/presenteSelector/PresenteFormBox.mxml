<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/halo"
	xmlns:domain="com.apolloti.getmarry.domain.*"
	width="300" height="100%"
	title="Detalhes do Presente" showEffect="Dissolve">
	
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	
	<s:states>
		<s:State name="State1"/>
		<s:State name="notifyPurchase"/>
	</s:states>
	
	<mx:Form width="100%" height="100%">
		
		<mx:FormItem label="Cód. (Loja):" width="100%" fontWeight="bold" enabled.notifyPurchase="false">
			<mx:Text width="100%" 
				text="{presente.codigo}" fontWeight="normal"/>
		</mx:FormItem>
		
		<mx:FormItem label="Nome:" width="100%" fontWeight="bold" enabled.notifyPurchase="false">
			<mx:Text width="100%" 
				text="{presente.nome}" fontWeight="normal"/>
		</mx:FormItem>
		
		<mx:FormItem label="Categoria:" width="100%" fontWeight="bold" enabled.notifyPurchase="false">
			<mx:Text width="100%"
				text="{presente.categoria.nome}" fontWeight="normal"/>
		</mx:FormItem>
		
		<mx:FormItem label="Marca/Modelo:" width="100%" fontWeight="bold" enabled.notifyPurchase="false" direction="horizontal">
			<mx:Text width="100%"
				text="{presente.marca.nome} - {presente.modelo}" fontWeight="normal"/>
		</mx:FormItem>
		
		<mx:FormItem label="Quantidade:" width="100%" fontWeight="bold" includeIn="State1">
			<mx:Text width="100%"
				text="{presente.quantidade}" fontWeight="normal"/>
		</mx:FormItem>
		
		<mx:FormItem label="Loja:" width="100%" fontWeight="bold" includeIn="State1">
			<mx:Text width="100%"
				text="{presente.loja.nome}" fontWeight="normal"/>
		</mx:FormItem>
		
		<s:VGroup width="100%" height="150" includeIn="State1">
			<s:Label text="Descrição:" fontWeight="bold"/>
			<s:TextArea width="100%" height="100%"
				text="{presente.descricao}" editable="false"/>	
		</s:VGroup>
		
		<mx:FormHeading includeIn="notifyPurchase" label="Notificação de Compra"/>
		
		<s:VGroup includeIn="notifyPurchase" width="100%" height="140">
			<s:Label text="Observação" fontWeight="bold"/>
			<s:TextArea id="inputObservacaoNotificacao" width="100%" height="100%"
				text="@{notificacao.observacao}"/>	
		</s:VGroup>
		
		<s:HGroup includeIn="notifyPurchase" verticalAlign="middle" textAlign="center">
			<s:Label includeIn="notifyPurchase" text="Tem certeza?" fontWeight="bold" fontStyle="italic" fontSize="15"/>
			<s:Button includeIn="notifyPurchase" label="Sim" width="50"
				click="presenteSelectorController.notifyPurchase( notificacao )"/>
			<s:Button width="50" label="Não"
				click="currentState = null"/>
		</s:HGroup>
		
	</mx:Form>

	<s:controlBarContent>
		<s:Button label="Notificar Compra" 
			click="currentState = 'notifyPurchase'" 
			enabled.notifyPurchase="false"/>
		
		<s:Label text="Cancelar"  buttonMode="true" height="30"
			textDecoration="underline" verticalAlign="middle" color="#0B59C3" fontWeight="normal"
			click="dispatchEvent( new TideUIEvent('cancelSelection') )"
			visible.notifyPurchase="false"/>
	</s:controlBarContent>
	
	<fx:Declarations>
		<domain:Notificacao id="notificacao"
			presente="{presente}"/>
	</fx:Declarations>
	
	<fx:Metadata>
		[Name]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import com.apolloti.getmarry.controller.PresenteSelectorController;
			import com.apolloti.getmarry.domain.*;
			
			import org.granite.tide.events.TideUIEvent;
			
			/*-------------------------------------------------------------------
			* 		 					ATTRIBUTES
			*-------------------------------------------------------------------*/
			private var _presente:Presente;
			
			[In]
			public var presenteSelectorController:PresenteSelectorController;
			
			/*-------------------------------------------------------------------
			* 		 					GETTERS AND SETTERS
			*-------------------------------------------------------------------*/
			public function set presente( value:Presente ):void
			{
				this._presente = value;
				this.notificacao = new Notificacao();
				this.currentState = null;
			}
			[Bindable]
			public function get presente( ):Presente
			{
				return this._presente;
			}
			
		]]>
	</fx:Script>
	
</s:Panel>
